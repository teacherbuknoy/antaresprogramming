@import "base/mixins";

@layer reset,
layouts,
components,
utilities,
print;

@layer reset {
  @import "base/reset";
  @import "base/fonts";
  @import "base/config";

  :root {
    --fg-contrast     : var(--d-contrast);
    --fg-default      : var(--d-default);
    --fg-subtle       : var(--d-subtle);
    --fg-non-essential: var(--d-non-essential);

    --bg-primary  : var(--l-contrast);
    --bg-secondary: var(--l-default);
    --bg-accent   : var(--l-subtle);
    --bg-exception: var(--l-non-essential);

    @media (prefers-color-scheme: dark) {
      --fg-contrast     : var(--l-contrast);
      --fg-default      : var(--l-default);
      --fg-subtle       : var(--l-subtle);
      --fg-non-essential: var(--l-non-essential);

      --bg-primary  : var(--d-default);
      --bg-secondary: var(--d-contrast);
      --bg-accent   : var(--d-subtle);
      --bg-exception: var(--d-non-essential);
    }
  }

  .light {
    --fg-contrast     : var(--d-contrast);
    --fg-default      : var(--d-default);
    --fg-subtle       : var(--d-subtle);
    --fg-non-essential: var(--d-non-essential);

    --bg-primary  : var(--l-contrast);
    --bg-secondary: var(--l-default);
    --bg-accent   : var(--l-subtle);
    --bg-exception: var(--l-non-essential);
  }

  .dark {
    --fg-contrast     : var(--l-contrast);
    --fg-default      : var(--l-default);
    --fg-subtle       : var(--l-subtle);
    --fg-non-essential: var(--l-non-essential);

    --bg-primary  : var(--d-default);
    --bg-secondary: var(--d-contrast);
    --bg-accent   : var(--d-subtle);
    --bg-exception: var(--d-non-essential);
  }

  :root {
    scroll-padding-top: 9rem;
    scroll-behavior   : smooth;
  }

  body {
    background-color       : hsl(var(--primary-300));
    color                  : hsl(var(--fg-default));
    font-family            : var(--font-body);
    font-variation-settings: "SOFT"100, "WONK"0, 'wght'350;
    font-weight            : 350;
    min-height             : 100vh;
    scroll-behavior        : smooth;
  }

  a {
    text-decoration: none;
    color          : hsl(var(--primary-700));

    &:focus-visible {
      outline: var(--focus-outline);
    }

    @at-root sup & {
      text-decoration: underline;
    }
  }

  strong,
  b {
    font-weight            : bold;
    font-variation-settings: 'wght'600, 'WONK'1, 'SOFT'1;
  }

  i,
  em,
  var,
  cite {
    font-style: italic;
  }

  * {
    outline      : var(--focus-outline);
    outline-color: transparent;
  }

  :target {
    animation      : target 700ms;
    animation-delay: 1000ms;
  }

  @keyframes target {
    from {
      outline-color : hsl(var(--secondary-500) / 100%);
      outline-offset: 0;
    }

    to {
      outline-color : hsl(var(--secondary-500) / 0%);
      outline-offset: 1rem;
    }
  }

  body {
    position: relative;
  }

  .decoration {
    opacity : 30%;
    z-index : -1;
    position: absolute;
    top     : 0;
    left    : 0;
    bottom  : 0;
    right   : 0;
  }

  .circle {
    align-items          : center;
    aspect-ratio         : 1/1;
    display              : grid;
    grid-template-columns: 1fr;
    grid-template-rows   : 1fr;
    justify-items        : center;
    position             : absolute;
    width                : 75vw;
    z-index              : -1;

    &::before {
      aspect-ratio    : 1/1;
      background-color: hsl(var(--primary-500));
      content         : '';
      grid-column     : 1/2;
      grid-row        : 1/2;
      opacity         : 50%;
      width           : 100%;
    }

    &::after {
      aspect-ratio    : 1/1;
      background-color: hsl(var(--secondary-500));
      content         : '';
      grid-column     : 1/2;
      grid-row        : 1/2;
      height          : 50%;
      opacity         : 20%;
      z-index         : 2;
    }

    &::before,
    &::after {
      border-radius: 100%;
      filter       : blur(100px);
    }

    &:first-child {
      top      : 0;
      left     : 0;
      transform: translateX(-50%) translateY(-50%);
    }

    &:nth-child(2) {
      display  : none;
      width    : 60%;
      top      : 50%;
      left     : 50%;
      transform: translateX(-50%) translateY(-50%);
    }

    &:last-child {
      bottom    : 0;
      right     : 0;
      //width   : 25vw;
      overflow  : hidden;

      &::before,
      &::after {
        transform: translateX(25vw) translateY(25vw);
      }
    }
  }
}

@layer layouts {
  @import "layouts/section";
  @import "layouts/collection";
  @import "layouts/footer";
  @import "layouts/stack";
  @import "layouts/article";
}

@layer components {
  @import "components/logo";
  @import "components/navigation";
  @import "components/button";
  @import "components/article";
  @import "components/callout";
  @import "components/code-sample";
}

@layer utilities {
  @import "utilities/alignment";
  @import "utilities/border";
  @import "utilities/color";
  @import "utilities/cursors";
  @import "utilities/display";
  @import "utilities/gap";
  @import "utilities/margin";
  @import "utilities/overflow";
  @import "utilities/padding";
  @import "utilities/sizes";
  @import "utilities/text";
  @import "utilities/visibility";
  @import "utilities/position";
}